user  nginx;

worker_rlimit_nofile 1024;
worker_processes 1;

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/error.log;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  include /etc/nginx/http-access.conf;
  default_type  application/octet-stream;

  sendfile on;

  server_tokens off;

  access_log off;
  log_format json_combined escape=json '{ "timestamp": "$time_iso8601", '
   '"clientip": "$remote_addr", '
   '"host": "$host", '
   '"auth": "$remote_user", '
   '"verb": "$request_method", '
   '"request": "$request_uri", '
   '"httpversion": "$server_protocol", '
   '"response": $status, '
   '"bytes": $body_bytes_sent, '
   '"time_request": $request_time, '
   '"time_backend_connect": $upstream_connect_time, '
   '"time_backend_response": $upstream_response_time, '
   '"cache": "$upstream_cache_status", '
   '"referrer": "$http_referer", '
   '"agent": "$http_user_agent" }';

  #Default value '4 8k' is raising a '414 Request-URI Too Large' error
  #when '/web/webclient/translations/' is requested with a lot of module names
  #as GET parameters (performed on user login), rendering a blank page.

  large_client_header_buffers 4 12k;

  types_hash_max_size 1024;
  types_hash_bucket_size 512;

  server_names_hash_bucket_size 64;
  server_names_hash_max_size 512;

  keepalive_timeout  65;
  tcp_nodelay        on;

  gzip              on;
  gzip_http_version 1.0;
  gzip_proxied      any;
  gzip_min_length   500;
  gzip_disable      "MSIE [1-6]\.";
  gzip_types        text/plain text/xml text/css
                    text/comma-separated-values
                    text/javascript
                    application/json
                    application/xml
                    application/x-javascript
                    application/javascript
                    application/atom+xml;

  proxy_redirect          off;

  proxy_connect_timeout   90;
  proxy_send_timeout      90;
  proxy_read_timeout      90;

  proxy_buffers           32 4k;
  proxy_buffer_size       1k;
  proxy_busy_buffers_size 8k;
  proxy_max_temp_file_size  2048m;
  proxy_temp_file_write_size  64k;

  proxy_cache_path /tmp/nginx levels=1:2 keys_zone=one:10m inactive=60m;

  include /etc/nginx/proxy_headers.conf;

  proxy_headers_hash_bucket_size 64;

  # List of application servers
  {{ $odoo_host := getenv "NGX_ODOO_HOST" }}

  # Configuration for the server
  server {
    listen 80 default;

    client_max_body_size 1G;

    add_header              Strict-Transport-Security "max-age=31536000";

    access_log /var/log/nginx/access.log json_combined;

    location / {
      proxy_pass http://{{ $odoo_host }}:8069;
      proxy_read_timeout    6h;
      proxy_connect_timeout 5s;
      proxy_redirect        off;

      add_header X-Static no;
      proxy_buffering off;
      proxy_buffer_size 64k;
      proxy_busy_buffers_size 64k;
      proxy_intercept_errors on;
    }
   {{ if getenv "NGX_ODOO_EXTRA_LOCATION" }}
    {{ $odoo_extra_location := getenv "NGX_ODOO_EXTRA_LOCATION" }}
    {{range jsonArray $odoo_extra_location}}
    location {{.}} {
      proxy_pass http://{{ $odoo_host }}:8069;
      proxy_read_timeout    6h;
      proxy_connect_timeout 5s;
      proxy_redirect        off;
      {{ if getenv "NGX_HTPASSWD" }}
      auth_basic "Odoo extra location restricted";
      auth_basic_user_file /etc/nginx/htpasswd;
      {{ end }}
      add_header X-Static no;
      proxy_buffering off;
      proxy_buffer_size 64k;
      proxy_busy_buffers_size 64k;
      proxy_intercept_errors on;
    }
   {{ end }}
   {{ end }}

    location /longpolling/im/poll { proxy_pass http://{{ $odoo_host }}:8072; }
    location /longpolling/poll { proxy_pass http://{{ $odoo_host }}:8072; }

    location /monitoring/status {
      proxy_pass http://{{ $odoo_host }}:8069;
      access_log off;
      log_not_found off;
    }

    location ~* /[^/]+/static/ {
      try_files =404 @cached;
    }

    # warning: /web/content reads ir.attachment, it would not be safe to
    # cache other files than .js / .css which can depend on users rights
    location ~* ^/web/content/.+\.(js|css)$ {
      try_files =404 @cached;
    }

    location @cached {
      proxy_cache one;
      proxy_cache_valid 60m;
      proxy_cache_valid any 1m;
      proxy_cache_revalidate on;
      proxy_cache_use_stale error timeout updating;
      proxy_cache_background_update on;
      proxy_cache_lock on;

      proxy_buffering on;

      # remove the cookie from the cached payload
      proxy_hide_header Set-Cookie;
      # ensure that caching is done by ignoring set-cookie
      proxy_ignore_headers Set-Cookie;
      proxy_set_header Cookie "";

      proxy_cache_bypass $http_cache_control;
      add_header X-Cache-Status $upstream_cache_status;

      # there is no inheritance of proxy_set_header, as soon as we define one at a level,
      # we need to redefine all
      include /etc/nginx/proxy_headers.conf;

      proxy_pass http://{{ $odoo_host }}:8069;
    }
  }
}
